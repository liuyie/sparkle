#!/bin/sh

chown root:admin $2/Sparkle.app/Contents/Resources/sidecar/mihomo
chown root:admin $2/Sparkle.app/Contents/Resources/sidecar/mihomo-alpha
chmod +s $2/Sparkle.app/Contents/Resources/sidecar/mihomo
chmod +s $2/Sparkle.app/Contents/Resources/sidecar/mihomo-alpha

NEW_SYSPROXY="$2/Sparkle.app/Contents/Resources/files/sysproxy"
OLD_SYSPROXY="/Library/PrivilegedHelperTools/sparkle.helper"

if [ ! -f "$NEW_SYSPROXY" ]; then
    exit 0
fi

NEED_UPDATE=false

if [ ! -f "$OLD_SYSPROXY" ]; then
    NEED_UPDATE=true
else
    if ! cmp -s "$NEW_SYSPROXY" "$OLD_SYSPROXY"; then
        NEED_UPDATE=true
    fi
fi

if [ "$NEED_UPDATE" = true ]; then
    mkdir -p /Library/PrivilegedHelperTools
    cp $2/Sparkle.app/Contents/Resources/files/sysproxy /Library/PrivilegedHelperTools/sparkle.helper
    chown root:wheel /Library/PrivilegedHelperTools/sparkle.helper
    chmod 544 /Library/PrivilegedHelperTools/sparkle.helper

    cat << EOF > /Library/LaunchDaemons/sparkle.helper.plist
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
        <key>Label</key>
        <string>sparkle.helper</string>
        <key>MachServices</key>
        <dict>
                <key>sparkle.helper</key>
                <true/>
        </dict>
        <key>KeepAlive</key>
        <true/>
        <key>Program</key>
        <string>/Library/PrivilegedHelperTools/sparkle.helper</string>
        <key>ProgramArguments</key>
        <array>
                <string>/Library/PrivilegedHelperTools/sparkle.helper</string>
                <string>server</string>
        </array>
        <key>StandardErrorPath</key>
        <string>/tmp/sparkle.helper.log</string>
        <key>StandardOutPath</key>
        <string>/tmp/sparkle.helper.log</string>
    </dict>
</plist>
EOF

    chown root:wheel /Library/LaunchDaemons/sparkle.helper.plist
    chmod 644 /Library/LaunchDaemons/sparkle.helper.plist
    launchctl load /Library/LaunchDaemons/sparkle.helper.plist
    launchctl start sparkle.helper
fi

exit 0
